<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Cognify-1.0</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        @keyframes smoothFadeIn {
            0% { opacity: 0; transform: translateY(20px) scale(0.95); }
            100% { opacity: 1; transform: translateY(0) scale(1); }
        }
 
        @keyframes assistantFadeIn {
            0% { opacity: 0; transform: translateY(30px); }
            100% { opacity: 1; transform: translateY(0); }
        }
 
        /* Global Styles */
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            background-size: 400% 400%;
        }
 
        /* Message Styles */
        .message-user {
            animation: smoothFadeIn 0.4s cubic-bezier(0.25, 0.1, 0.25, 1);
            background: linear-gradient(to right, #e6f2ff, #cce6ff);
        }
 
        .message-assistant {
            animation: assistantFadeIn 0.6s ease-out;
            background: linear-gradient(to right, #f0f0f0, #e6e6e6);
        }
 
        /* Numbered Steps Styling - Only applied when steps class is present */
        .numbered-steps {
            counter-reset: step;
            list-style-type: none;
            padding-left: 0;
        }
 
        .numbered-steps li {
            position: relative;
            padding: 15px 15px 15px 50px;
            margin-bottom: 15px;
            background: #f8f9fa;
            border-radius: 8px;
            animation: smoothFadeIn 0.3s ease-out;
            transition: all 0.3s ease;
        }
 
        .numbered-steps li:before {
            content: "Step " counter(step);
            counter-increment: step;
            position: absolute;
            left: 15px;
            color: #3b82f6;
            font-weight: bold;
        }
 
        .numbered-steps li:hover {
            transform: translateX(10px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
 
        /* Regular message content */
        .message-content {
            white-space: pre-wrap;
            line-height: 1.5;
        }
 
        /* Image Styling */
        .image-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1rem;
        }
 
        .image-item {
            position: relative;
            overflow: hidden;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
 
        .image-item img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
 
        .image-item:hover img {
            transform: scale(1.05);
        }
 
        /* Button Hover Effects */
        .btn-hover {
            transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
 
        .btn-hover:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        @keyframes smoothFadeIn {
            0% { opacity: 0; transform: translateY(20px) scale(0.95); }
            100% { opacity: 1; transform: translateY(0) scale(1); }
        }
 
        @keyframes assistantFadeIn {
            0% { opacity: 0; transform: translateY(30px); }
            100% { opacity: 1; transform: translateY(0); }
        }
 
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            background-size: 400% 400%;
        }
 
        .message-user {
            animation: smoothFadeIn 0.4s cubic-bezier(0.25, 0.1, 0.25, 1);
            background: linear-gradient(to right, #e6f2ff, #cce6ff);
        }
 
        .message-assistant {
            animation: assistantFadeIn 0.6s ease-out;
            background: linear-gradient(to right, #f0f0f0, #e6e6e6);
        }
 
        /* Add new style for reversed chat container */
        #chat-container {
            display: flex;
            flex-direction: column-reverse;
            height: calc(100vh - 200px); /* Adjust based on your header and form height */
        }
 
        /* Adjust message animations for reversed order */
        .message-user, .message-assistant {
            transform-origin: bottom;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col font-sans antialiased">
    <!-- Header and other elements remain the same -->
    <div class="container mx-auto px-4 py-6 flex-grow flex flex-col">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-4xl font-bold text-blue-600 transition-all duration-500 hover:text-blue-700">
                <i class="bi bi-robot"></i> Chat With Cognify
            </h1>
            <a href="/layout" class="bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-3 rounded-lg hover:from-green-600 hover:to-green-700 btn-hover shadow-md">
                <i class="fas fa-upload mr-2"></i>Upload PDF
            </a>
        </div>
 
        <!-- Modified chat container -->
        <div class="flex-grow bg-white rounded-xl shadow-2xl p-6 overflow-y-auto mb-4 border-t-4 border-blue-500" id="chat-container">
            {% for message in chat_history|reverse %}  <!-- Note the reverse filter -->
            {% if message.role == 'user' %}
            <div class="bg-blue-100 p-4 rounded-lg mb-4 self-end max-w-xl ml-auto message-user flex items-start space-x-3">
                <div class="flex-grow">
                    <p class="text-gray-800">{{ message.content }}</p>
                </div>
                <i class="fas fa-user-circle text-2xl text-blue-500"></i>
            </div>
            {% else %}
            <div class="bg-gray-100 p-4 rounded-lg mb-4 max-w-xl mr-auto message-assistant flex items-start space-x-3">
                <i class="bi bi-chat-square-dots text-2xl text-gray-600"></i>
                <div class="flex-grow">
                    {% if message.images %}
                    <div class="image-container mb-4">
                        {% for image in message.images %}
                        <div class="image-item">
                            <img src="data:image/png;base64,{{ image.base64_image }}"
                                 alt="{{ image.title }}"
                                 class="rounded-lg shadow-md">
                        </div>
                        {% endfor %}
                    </div>
                    {% endif %}
 
                    {% if message.type == 'steps' %}
                    <ul class="numbered-steps">
                        {% for line in message.content.split('\n') %}
                            {% if line.strip() %}
                                <li>{{ line }}</li>
                            {% endif %}
                        {% endfor %}
                    </ul>
                    {% else %}
                    <p class="message-content text-gray-800">{{ message.content }}</p>
                    {% endif %}
                </div>
            </div>
            {% endif %}
            {% endfor %}
        </div>
 
        <!-- Chat form remains the same -->
        <form id="chat-form" action="/" method="POST" class="flex space-x-2">
            <input type="text" name="user_input" placeholder="Ask me something" required
                class="flex-grow p-3 border-2 border-gray-300 rounded-md focus:ring-2 focus:ring-blue-400 focus:border-transparent transition-all duration-300">
            <button type="submit" name="action" value="send"
                class="bg-gradient-to-r from-blue-600 to-blue-700 text-white px-6 py-3 rounded-md hover:from-blue-700 hover:to-blue-800 btn-hover shadow-md">
                <i class="fas fa-paper-plane mr-2"></i>Send
            </button>
            <button type="button" id="clear-chat-btn"
                class="bg-gradient-to-r from-red-500 to-red-600 text-white px-6 py-3 rounded-md hover:from-red-600 hover:to-red-700 btn-hover shadow-md">
                <i class="fas fa-trash-alt mr-2"></i>Clear Chat
            </button>
        </form>
    </div>
 
    <script>
        // Modified scroll behavior - new messages appear at the top
        const chatContainer = document.getElementById('chat-container');
       
        // No need for scrollToBottom function as messages will appear at the top
       
        // Clear chat functionality remains similar but adjusted for new layout
        document.getElementById('clear-chat-btn').addEventListener('click', async (e) => {
            e.preventDefault();
            try {
                const response = await fetch('/', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                    body: 'action=clear'
                });
 
                if (response.ok) {
                    chatContainer.style.transition = 'opacity 0.3s ease-out';
                    chatContainer.style.opacity = '0';
 
                    setTimeout(() => {
                        chatContainer.innerHTML = '';
                        chatContainer.style.opacity = '1';
                       
                        const clearMessage = document.createElement('div');
                        clearMessage.className = 'text-center text-green-600 mb-4 animate-bounce';
                        clearMessage.textContent = 'Chat cleared successfully!';
                        chatContainer.appendChild(clearMessage);
 
                        setTimeout(() => {
                            if (clearMessage.parentNode) {
                                clearMessage.parentNode.removeChild(clearMessage);
                            }
                        }, 2000);
                    }, 300);
                }
            } catch (error) {
                console.error('Error clearing chat:', error);
            }
        });
    </script>
</body>
</html>
 